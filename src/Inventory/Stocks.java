/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Inventory;

import inventorycashierinsystem.LogIn_Page;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author student.admin
 */
public class Stocks extends javax.swing.JFrame {

    /**
     * Creates new form Cashier_Home_Page
     */
    PreparedStatement ps;
    Connection con;
    Statement st;
    ResultSet rs;

    public Stocks() {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        date();
        time();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always.
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        label8 = new java.awt.Label();
        jquantity = new javax.swing.JTextField();
        product = new javax.swing.JTextField();
        label9 = new java.awt.Label();
        des = new javax.swing.JTextField();
        label10 = new java.awt.Label();
        label1 = new java.awt.Label();
        label11 = new java.awt.Label();
        bprice = new javax.swing.JTextField();
        label7 = new java.awt.Label();
        sprice = new javax.swing.JTextField();
        junit = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        userID = new javax.swing.JTextField();
        useemail = new javax.swing.JTextField();
        jtime = new javax.swing.JTextField();
        jdate = new javax.swing.JTextField();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label8.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        label8.setText("Product :");

        jquantity.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jquantity.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jquantityActionPerformed(evt);
            }
        });

        product.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        product.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productActionPerformed(evt);
            }
        });

        label9.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        label9.setText("Description :");

        des.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        des.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        des.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desActionPerformed(evt);
            }
        });

        label10.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        label10.setText("Buying Price :");

        label1.setFont(new java.awt.Font("Monospaced", 1, 36)); // NOI18N
        label1.setText("Product Inventory");

        label11.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        label11.setText("Selling Price :");

        bprice.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        bprice.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        bprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpriceActionPerformed(evt);
            }
        });

        label7.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        label7.setText("Quantity :");

        sprice.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        sprice.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        sprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spriceActionPerformed(evt);
            }
        });

        junit.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        junit.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        junit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                junitActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventorycashierinsystem/img/product.png"))); // NOI18N
        jLabel2.setText("Add Product");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        userID.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        userID.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        userID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIDActionPerformed(evt);
            }
        });

        useemail.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        useemail.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        useemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useemailActionPerformed(evt);
            }
        });

        jtime.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jtime.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtimeActionPerformed(evt);
            }
        });

        jdate.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jdate.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(product, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bprice, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sprice, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(des, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(junit, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(80, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(162, 162, 162))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtime, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(useemail, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jdate, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(useemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(des, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(junit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void junitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_junitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_junitActionPerformed

    private void spriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spriceActionPerformed

    private void bpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bpriceActionPerformed

    private void desActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_desActionPerformed

    private void productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productActionPerformed

    private void jquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jquantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jquantityActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        h();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void userIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userIDActionPerformed

    private void useemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useemailActionPerformed

    private void jtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtimeActionPerformed

    private void jdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jdateActionPerformed

    public void AddProduct() {
        String pname = product.getText();
//        try {
//            con = DB_connection.getConnection();
//            ps = con.prepareStatement("SELECT * FROM `inventory` WHERE 1");
//            rs = ps.executeQuery();
//            if (rs.next()) {
//                String verify = rs.getString("ProductName");
//                if (verify.equals(product.getText())) {
//                    JOptionPane.showMessageDialog(null, "This Product is already exist!");
//                } else {
        String unit = junit.getText();
        String qyt = jquantity.getText();
        String descript = des.getText();
        String bprcs = bprice.getText();
        String sprcs = sprice.getText();

        try {
            ps = con.prepareStatement("INSERT INTO `inventory`(`ProductName`, `Description`, `BuyingPrice`, `SellingPrice`, `InventoryQuantity`, `UnitOfMeasure`) VALUES (?,?,?,?,?,?)");
            ps.setString(1, pname);
            ps.setString(2, descript);
            ps.setString(3, bprcs);
            ps.setString(4, sprcs);
            ps.setString(5, qyt);
            ps.setString(6, unit);

//                        if (pname.equals("")) {
//                            JOptionPane.showMessageDialog(null, "Please input your Product Name");
//                        } else if (unit.equals("")) {
//                            JOptionPane.showMessageDialog(null, "Please input your Unit");
//                        } else if (qyt.equals("")) {
//                            JOptionPane.showMessageDialog(null, "Please input your Quantity");
//                        } else if (descript.equals("")) {
//                            JOptionPane.showMessageDialog(null, "Please input your Description");
//                        } else if (bprcs.equals("")) {
//                            JOptionPane.showMessageDialog(null, "Please input your Buying Price");
//                        } else if (sprcs.equals("")) {
//                            JOptionPane.showMessageDialog(null, "Please input your Selling Price");
//                        } else {
            if (ps.executeUpdate() != 0) {
                JOptionPane.showMessageDialog(rootPane, "New Product being added");
                String b = "SELECT * FROM inventory WHERE InventoryID =(SELECT max(InventoryID) FROM inventory)";
                try {
                    ps = con.prepareStatement(b);
                    rs = ps.executeQuery();
                    if (rs.next()) {
                        String gg = rs.getString("InventoryID");
                        des.setText(gg);
                        try {
                            String trans = "Add Product";
                            String recor = ("INSERT INTO `stafftransaction`(`InventoryID`, `SQuantity`, `TypeOfTransaction`, `UserID`, `Date`, `Time`) VALUES (?,?,?,?,?,?)");
                            ps = con.prepareStatement(recor);
                            ps.setString(1, des.getText());
                            ps.setString(2, jquantity.getText());
                            ps.setString(3, trans);
                            ps.setString(4, userID.getText());
                            ps.setString(5, jdate.getText());
                            ps.setString(6, jtime.getText());
                            if (ps.executeUpdate() != 0) {
                                JOptionPane.showMessageDialog(rootPane, "Has been Recorded");
                                new Inventory_Page().setVisible(true);
                                setVisible(false);
                            }
                        } catch (Exception e) {
                        }
                    }
                } catch (Exception ex) {
                }

//                            }
            }
        } catch (SQLException ex) {
        }
//                }
//            }
//
//        } catch (Exception ex) {
//        }
    }

    public void h() {
        String pname = product.getText();
        String unit = junit.getText();
        String qyt = jquantity.getText();
        String descript = des.getText();
        String bprcs = bprice.getText();
        String sprcs = sprice.getText();
        String stts = "Enable";

        try {
            ps = con.prepareStatement("INSERT INTO `inventory`(`ProductName`, `Description`, `BuyingPrice`, `SellingPrice`, `InventoryQuantity`, `UnitOfMeasure`, `Status`) VALUES  (?,?,?,?,?,?,?)");
            ps.setString(1, product.getText());
            ps.setString(2, des.getText());
            ps.setString(3, bprice.getText());
            ps.setString(4, sprice.getText());
            ps.setString(5, jquantity.getText());
            ps.setString(6, junit.getText());
            ps.setString(7, stts);
            if (ps.executeUpdate() != 0) {
                JOptionPane.showMessageDialog(rootPane, "New Product being added");
                String b = "SELECT * FROM inventory WHERE InventoryID =(SELECT max(InventoryID) FROM inventory)";
                try {
                    ps = con.prepareStatement(b);
                    rs = ps.executeQuery();
                    if (rs.next()) {
                        String gg = rs.getString("InventoryID");
                        des.setText(gg);
                        try {
                            String trans = "Add Product";
                            String recor = ("INSERT INTO `stafftransaction`(`InventoryID`, `SQuantity`, `TypeOfTransaction`, `UserID`, `Date`, `Time`) VALUES (?,?,?,?,?,?)");
                            ps = con.prepareStatement(recor);
                            ps.setString(1, des.getText());
                            ps.setString(2, jquantity.getText());
                            ps.setString(3, trans);
                            ps.setString(4, userID.getText());
                            ps.setString(5, jdate.getText());
                            ps.setString(6, jtime.getText());
                            if (ps.executeUpdate() != 0) {
                                JOptionPane.showMessageDialog(rootPane, "Has been Recorded");
                                new Inventory_Page().setVisible(true);
                                setVisible(false);
                            }
                        } catch (Exception e) {
                        }
                    }
                } catch (Exception ex) {
                }
            }
        } catch (SQLException ex) {
        }
    }

    public void date() {
        Calendar c = new GregorianCalendar();
        int day = c.get(Calendar.DAY_OF_MONTH);
        int month = c.get(Calendar.MONTH);
        int year = c.get(Calendar.YEAR);
        jdate.setText("" + year + "/" + month + "/" + day + "");

    }

    public void get(String van) {
        LogIn_Page h = new LogIn_Page();
        h.van();
        useemail.setText(van);
        try {
            st = con.createStatement();
            String sql = "SELECT * FROM users WHERE Email = '" + van + "'";
            rs = st.executeQuery(sql);
            while (rs.next()) {
                String usertoid = rs.getString("UserID");
                userID.setText(usertoid);
            }
        } catch (Exception e) {
        }

    }

    public void time() {
        Calendar c = new GregorianCalendar();
        int seconds = c.get(Calendar.SECOND);
        int minutes = c.get(Calendar.MINUTE);
        int hours = c.get(Calendar.HOUR);
        jtime.setText("" + hours + ":" + minutes + ":" + seconds + "");
    }

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bprice;
    private javax.swing.JTextField des;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jdate;
    private javax.swing.JTextField jquantity;
    private javax.swing.JTextField jtime;
    private javax.swing.JTextField junit;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private javax.swing.JTextField product;
    private javax.swing.JTextField sprice;
    private javax.swing.JTextField useemail;
    private javax.swing.JTextField userID;
    // End of variables declaration//GEN-END:variables
}
